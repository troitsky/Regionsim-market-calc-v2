// Простой тест для анализа первой итерации
const RP_PARAMETR_SA = 10;

// Создаем простые тестовые данные
const testData = [
    { k: 0, спрос_региона: 0, валовой_выпуск: 0, уровень_нтп: 1.0 }, // Мир
    { k: 1, спрос_региона: 50, валовой_выпуск: 80, уровень_нтп: 1.1 },
    { k: 2, спрос_региона: 50, валовой_выпуск: 70, уровень_нтп: 0.9 }
];

const общийСпрос = 100; // Сумма спросов регионов

// Расчет начальных параметров
testData.forEach(p => {
    p.начальное_предложение = (p.k === 0) ? общийСпрос : p.валовой_выпуск;
    p.балл_са = p.начальное_предложение > 0 ? Math.exp(RP_PARAMETR_SA * p.уровень_нтп) : 0;
});

const суммаБаллов = testData.reduce((sum, p) => sum + p.балл_са, 0);
testData.forEach(p => {
    p.доля_идеал = суммаБаллов > 0 ? p.балл_са / суммаБаллов : 0;
});

console.log('=== ТЕСТОВЫЕ ДАННЫЕ ===');
console.table(testData.map(p => ({
    'Игрок': p.k === 0 ? 'Мир' : `Игрок ${p.k}`,
    'Спрос': p.спрос_региона,
    'Предложение': p.начальное_предложение,
    'Балл SA': p.балл_са.toFixed(2),
    'Доля идеал': (p.доля_идеал * 100).toFixed(2) + '%'
})));

// Инициализация для итерации
testData.forEach(p => {
    p.предложение_остаток = p.начальное_предложение;
    p.спрос_удовл_внутр = 0;
    p.потенциальный_внутренний_спрос = 0;
    if (p.k !== 0) {
        p.спрос_неудовлетворенный = p.спрос_региона;
        p.импорт_расчетный = 0;
    } else {
        p.спрос_неудовлетворенный = 0;
        p.импорт_расчетный = 0;
    }
});

console.log('\n=== ПЕРВАЯ ИТЕРАЦИЯ (НОВАЯ ЛОГИКА) ===');

// Новая логика с матрицей продаж
const buyers = testData.filter(p => p.k !== 0);
let totalSatisfied = 0;

buyers.forEach(buyer => {
    console.log(`\nПокупатель ${buyer.k} (спрос = ${buyer.спрос_региона}):`);
    let остатокСпроса = buyer.спрос_региона;
    
    testData.forEach(seller => {
        const желаемаяПокупка = buyer.спрос_региона * seller.доля_идеал;
        const доступно = Math.min(желаемаяПокупка, seller.предложение_остаток);
        const фактПокупка = Math.min(доступно, остатокСпроса);
        
        if (фактПокупка > 0) {
            console.log(`  - Покупает у ${seller.k === 0 ? 'Мира' : 'Игрока ' + seller.k}: ${фактПокупка.toFixed(2)} (хотел ${желаемаяПокупка.toFixed(2)})`);
            
            seller.спрос_удовл_внутр += фактПокупка;
            seller.предложение_остаток -= фактПокупка;
            остатокСпроса -= фактПокупка;
            totalSatisfied += фактПокупка;
            
            if (seller.k === 0) {
                buyer.импорт_расчетный += фактПокупка;
                console.log(`    (это импорт)`);
            }
        }
    });
    
    buyer.спрос_неудовлетворенный = остатокСпроса;
    console.log(`  Остаток неудовлетворенного спроса: ${остатокСпроса.toFixed(2)}`);
});

console.log('\n=== ИТОГИ ПЕРВОЙ ИТЕРАЦИИ ===');
console.table(testData.map(p => ({
    'Игрок': p.k === 0 ? 'Мир' : `Игрок ${p.k}`,
    'Продано': p.спрос_удовл_внутр.toFixed(2),
    'Остаток предложения': p.предложение_остаток.toFixed(2),
    'Импорт': p.импорт_расчетный.toFixed(2),
    'Неудовл. спрос': p.спрос_неудовлетворенный.toFixed(2)
})));

const мир = testData.find(p => p.k === 0);
const импортВсего = buyers.reduce((sum, p) => sum + p.импорт_расчетный, 0);
console.log(`\nПродажи Мира: ${мир.спрос_удовл_внутр.toFixed(2)}`);
console.log(`Сумма импортов: ${импортВсего.toFixed(2)}`);
console.log(`Совпадают: ${Math.abs(мир.спрос_удовл_внутр - импортВсего) < 0.001 ? 'ДА ✓' : 'НЕТ ✗'}`);